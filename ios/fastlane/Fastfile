# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

def app_review_info
{
  contact_email: ENV['APP_STORE_CONNECT_REVIEW_EMAIL'],
  contact_first_name: ENV['APP_STORE_CONNECT_REVIEW_FIRST_NAME'],
  contact_last_name: ENV['APP_STORE_CONNECT_REVIEW_LAST_NAME'],
  contact_phone: ENV['APP_STORE_CONNECT_REVIEW_PHONE'],
  demo_account_name: ENV['DEMO_ACCOUNT_NAME'],
  demo_account_password: ENV['DEMO_ACCOUNT_PASSWORD'],
  notes: "Thank you for the review! <3"
}
end

platform :ios do
  before_all do
    setup_circle_ci
  end

  desc "Build Releasable IPA"
  lane :build do
    increment_build_number(build_number: ENV["BUILD_NUMBER"], xcodeproj: "GaloyApp.xcodeproj")
    match(type: "appstore", readonly: is_ci)
    gym(scheme: "GaloyApp")
  end

  desc "Upload to App Store TestFlight"
  lane :app_store_upload do
    app_store_connect_api_key(
      key_id: ENV["APPSTORE_API_KEY_ID"],
      issuer_id: ENV["APPSTORE_ISSUER_ID"],
      key_content: ENV["APPSTORE_API_KEY"],
      is_key_content_base64: true
    )

    upload_to_testflight(
      ipa: "./Bitcoin Beach.ipa",
      changelog: "No changelog"
    )
  end

  desc "Promote Testflight build to Beta"
  lane :promote_to_beta do
    app_store_connect_api_key(
      key_id: ENV["APPSTORE_API_KEY_ID"],
      issuer_id: ENV["APPSTORE_ISSUER_ID"],
      key_content: ENV["APPSTORE_API_KEY"],
      is_key_content_base64: true
    )

    upload_to_testflight(
      app_platform: "ios",
      distribute_only: true,
      distribute_external: true,
      app_version: ENV["VERSION"],
      changelog: ENV["CHANGELOG"],
      groups: ENV["EXTERNAL_TESTING_GROUPS"],
      notify_external_testers: true,
      demo_account_required: true,
      beta_app_review_info: app_review_info
    )
  end

  desc "Promote Beta build to Public"
  lane :promote_to_public do
    app_store_connect_api_key(
      key_id: ENV["APPSTORE_API_KEY_ID"],
      issuer_id: ENV["APPSTORE_ISSUER_ID"],
      key_content: ENV["APPSTORE_API_KEY"],
      is_key_content_base64: true
    )

    upload_to_app_store(
      platform: "ios",
      skip_binary_upload: true,
      skip_screenshots: true,
      skip_metadata: false,
      app_version: ENV["VERSION"],
      build_number: ENV["BUILD_NUMBER"],

      force: true, # dont verify the upload via an HTML file
      submit_for_review: true,
      automatic_release: true,
      phased_release: true,

      app_review_information: app_review_info,
      precheck_include_in_app_purchases: false, # doesn't work with App Store Connect API Key

      # Advertising Identifier (IDFA) information
      submission_information: {
          add_id_info_uses_idfa: false,
      },

      languages: ["en-US", "es-ES", "es-MX"],
      release_notes: {
        "default": ENV["CHANGELOG"],
        "en-US": ENV["CHANGELOG"],
      },
    )
  end

  desc "Build for end to end tests"
  lane :build_e2e do
    match(type: "appstore", readonly: is_ci)
    gym(scheme: "GaloyApp", include_bitcode: false)
  end

  desc "End to end testing on browserstack"
  lane :browserstack do
    build_e2e
    upload_to_browserstack_app_automate(
      browserstack_username: ENV["BROWSERSTACK_USER"],
      browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
    )
    sh("GALOY_TEST_TOKENS=$GALOY_TEST_TOKENS && GALOY_TOKEN_2=$GALOY_TOKEN_2 && yarn test:browserstack:ios")
  end
end

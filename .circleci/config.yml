version: 2
jobs:
  node:
    working_directory: ~/GaloyApp/mobile
    docker:
      - image: circleci/node:8
    steps:
      - checkout:
          path: ~/GaloyApp

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: solidarity --version
      - run: yarn install react-native-cli
      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/GaloyApp/mobile
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  # android:
  #   working_directory: ~/GaloyApp/mobile/android
  #   docker:
  #     - image: circleci/android:api-27-node8-alpha
  #   steps:
  #     - checkout:
  #         path: ~/GaloyApp/mobile

  #     - attach_workspace:
  #         at: ~/GaloyApp/mobile

  #     - restore_cache:
  #         key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

  #     - run: bundle install

  #     - save_cache:
  #         key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
  #         paths:
  #           - vendor/bundle

  #     - run:
  #         name: fastlane tests
  #         command: |
  #           mkdir -p test-results/fastlane
  #           bundle exec fastlane test
  #           mv fastlane/report.xml test-results/fastlane
  #     - store_test_results:
  #         path: test-results

  #     - store_artifacts:
  #         path: test-results

  ios:
    macos:
      xcode: "9.0"
    working_directory: ~/GaloyApp/mobile

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout

      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec fastlane test
          working_directory: ios

      - run:
          name: set up test results
          working_directory: ios
          when: always
          command: |
            mkdir -p test-results/fastlane test-results/xcode
            mv fastlane/report.xml test-results/fastlane
            mv fastlane/test_output/report.junit test-results/xcode/junit.xml
      - store_test_results:
          path: ios/test-results

      - store_artifacts:
          path: ios/test-results

workflows:
  version: 2
  node-android-ios:
    jobs:
      - node
      # - android:
      #     requires:
      #       - node
      - ios:
          requires:
            - node



# # Javascript Node CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-javascript/ for more details
# #
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:8

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     working_directory: ~/GaloyApp/mobile

#     steps:
#       - checkout:
#           path: ~/GaloyApp

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "package.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run: yarn install

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}

#       # run tests!
#       - run: ls
#       - run: cd yarn test
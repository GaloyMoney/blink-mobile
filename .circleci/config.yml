version: 2.1

orbs:
  gh: circleci/github-cli@2.0

jobs:
  android_test:
    docker:
      - image: cimg/android:2022.06.1
    resource_class: large
    environment:
      TERM: dumb
      JAVA_OPTS: -Xms512m -Xmx2g
      GRADLE_OPTS: -Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"
    working_directory: ~/galoy-mobile
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/galoy-mobile
      - run: sudo apt-get update
      - run: curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
      - run: sudo apt-get install -y gnupg2 gcc g++ make nodejs
      - run: sudo npm install -g yarn

      - restore_cache:
          key: yarn-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run:
          name: Build APK
          command: cd android && ./gradlew assembleDebug
      - run:
          name: App upload and Set app id in environment variable.
          command: |
            cd android
            APP_UPLOAD_RESPONSE=$(curl -u "$BROWSERSTACK_USER:$BROWSERSTACK_ACCESS_KEY" -X POST https://api-cloud.browserstack.com/app-automate/upload -F "file=@app/build/outputs/apk/debug/app-debug.apk")
            APP_ID=$(echo $APP_UPLOAD_RESPONSE | jq -r ".app_url")
            if [ $APP_ID != null ]; then
              echo "Apk uploaded to BrowserStack with app id : ",$APP_ID;
              echo "export BROWSERSTACK_APP_ID=$APP_ID" >> $BASH_ENV;
              source $BASH_ENV;
              echo "Setting value of BROWSERSTACK_APP_ID in environment variables to  ",$APP_ID;
            else
              UPLOAD_ERROR_MESSAGE=$(echo $APP_UPLOAD_RESPONSE | jq -r ".error")
              echo "App upload failed, reason : ",$UPLOAD_ERROR_MESSAGE
              exit 1;
            fi
      - run:
          name: Run Test on Android
          command: |
            yarn start &
            ./node_modules/.bin/wdio android/browserstack.js

  ios_test:
    macos:
      xcode: 13.3.0
    working_directory: ~/galoy-mobile
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/galoy-mobile
      - add_ssh_keys:
          fingerprints:
            - "19:7e:f3:6c:be:a7:17:01:7d:09:ca:39:c3:98:86:90"
      - restore_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
      - run: cd ios && bundle config set deployment 'true'
      - run: cd ios && bundle check || bundle install
      - save_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor
      - restore_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
      - run: yarn install
      - save_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
          paths:
            - node_modules
            - ios/Pods
      - run: sed -i'' -e "s/GOOGLE_SERVICE_FIREBASE_API_KEY/$GOOGLE_SERVICE_FIREBASE_API_KEY/" ios/GoogleService-Info.plist
      - run: sed -i'' -e 's/PROVISIONING_PROFILE_SPECIFIER = "match AppStore io.galoy.bitcoinbeach"/PROVISIONING_PROFILE_SPECIFIER = "match Development io.galoy.bitcoinbeach"/g' ios/GaloyApp.xcodeproj/project.pbxproj
      - run:
          name: Build IPA
          command: cd ios && bundle exec fastlane build_ipa
          no_output_timeout: 15m
      - run:
          name: App upload and Set app id in environment variable.
          command: |
            cd ios
            APP_UPLOAD_RESPONSE=$(curl -u "$BROWSERSTACK_USER:$BROWSERSTACK_ACCESS_KEY" -X POST https://api-cloud.browserstack.com/app-automate/upload -F "file=@output/gym/Bitcoin Beach.ipa")
            APP_ID=$(echo $APP_UPLOAD_RESPONSE | jq -r ".app_url")
            if [ $APP_ID != null ]; then
              echo "Apk uploaded to BrowserStack with app id : ",$APP_ID;
              echo "export BROWSERSTACK_APP_ID=$APP_ID" >> $BASH_ENV;
              source $BASH_ENV;
              echo "Setting value of BROWSERSTACK_APP_ID in environment variables to  ",$APP_ID;
            else
              UPLOAD_ERROR_MESSAGE=$(echo $APP_UPLOAD_RESPONSE | jq -r ".error")
              echo "App upload failed, reason : ",$UPLOAD_ERROR_MESSAGE
              exit 1;
            fi
      - run:
          name: Run Test on iOS
          command: |
            yarn start &
            ./node_modules/.bin/wdio ios/browserstack.js

  build_ios:
    macos:
      xcode: 13.3.0
    working_directory: ~/galoy-mobile
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - gh/install
      - checkout:
          path: ~/galoy-mobile
      - add_ssh_keys:
          fingerprints:
            - "19:7e:f3:6c:be:a7:17:01:7d:09:ca:39:c3:98:86:90"
      - restore_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
      - run: cd ios && bundle config set deployment 'true'
      - run: cd ios && bundle check || bundle install
      - save_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor
      - restore_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
      - run: yarn install
      # - run: git diff "ios/Podfile.lock" | cat
      - save_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
          paths:
            - node_modules
            - ios/Pods
      - run: git checkout main
      - run: yarn jest
      - run: sed -i'' -e "s/GOOGLE_SERVICE_FIREBASE_API_KEY/$GOOGLE_SERVICE_FIREBASE_API_KEY/" ios/GoogleService-Info.plist
      - run: sed -i'' -e "s/MARKETING_VERSION.*/MARKETING_VERSION = $CIRCLE_TAG;/g" ios/GaloyApp.xcodeproj/project.pbxproj
      - run:
          name: fastlane
          command: cd ios && bundle exec fastlane beta
          no_output_timeout: 15m
      - run: git config credential.helper 'cache --timeout=120'
      - run: git config --global user.name "circleci-bot"
      - run: git config --global user.email "bot@circleci.com"
      - run: git config pull.rebase false
      - run: git pull https://${GITHUB_TOKEN}@github.com/GaloyMoney/galoy-mobile.git main
      - run: git commit -a -m "new ios build [ci skip]"
      - run: git reset -- GoogleService-Info.plist
      - run: git push -q https://${GITHUB_TOKEN}@github.com/GaloyMoney/galoy-mobile.git main
      - run: gh release upload $CIRCLE_TAG "output/gym/Bitcoin Beach.ipa" --clobber
      - store_artifacts:
          path: ios/output
      - store_test_results:
          path: ios/output/scan

  build_android:
    docker:
      - image: cimg/android:2022.06.1
    resource_class: large
    environment:
      TERM: dumb
      JAVA_OPTS: -Xms512m -Xmx2g
      GRADLE_OPTS: -Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"
    working_directory: ~/galoy-mobile
    shell: /bin/bash --login -o pipefail
    steps:
      - gh/install
      - checkout:
          path: ~/galoy-mobile
      - run: sudo apt-get update
      - run: sudo apt-get install gnupg2
      - run: curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
      - run: sudo apt-get install -y nodejs
      - run: sudo apt-get install gcc g++ make
      - run: sudo npm install -g yarn
      - run: gpg --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
      - run: curl -sL https://get.rvm.io | bash -s stable --ruby
      - run: source /home/circleci/.rvm/scripts/rvm
      - run: rvm install 2.6
      - run: rvm use 2.6 --default
      - run: gem install fastlane -NV

      - run: cd android && bundle config set deployment 'true'
      - run: cd android && bundle check || bundle install

      - run: echo $ANDROID_SERVICE_ACCOUNT_UPLOAD | base64 -d > android/api-8350101450647692243-59029-b9bec84a7e5a.json
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/release.keystore
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/app/release.keystore

      - run: node -v
      - run: npm -v
      - run: ruby -v
      - run: fastlane -v
      - run: yarn -v

      - restore_cache:
          key: 2-yarn-{{ checksum "yarn.lock" }}-android
      - run: yarn install
      - save_cache:
          key: 2-yarn-{{ checksum "yarn.lock" }}-android
          paths:
            - node_modules

      - run: git checkout main
      - run: yarn jest
      - run: echo $JAVA_OPTS
      - run: echo $GRADLE_OPTS
      - run: cd android && fastlane android beta

      - run: git config credential.helper 'cache --timeout=120'
      - run: git config --global user.name "circleci-bot"
      - run: git config --global user.email "bot@circleci.com"
      - run: git config pull.rebase false
      - run: git pull origin main
      - run: cd ~/galoy-mobile
      - run: git add --force android/app/build/generated/sourcemaps/react/release
      - run: git commit -a -m "new android build [ci skip]"
      - run: git push -q https://${GITHUB_TOKEN}@github.com/GaloyMoney/galoy-mobile.git main

      - run: gh release upload $CIRCLE_TAG "app/build/outputs/apk/release/app-release.apk" --clobber
      - store_artifacts:
          path: android/app/build/outputs/apk

workflows:
  mobile:
    jobs:
      - hold_build_mobile:
          type: approval
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - build_ios:
          requires:
            - hold_build_mobile
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - build_android:
          requires:
            - hold_build_mobile
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/

version: 2.1

jobs:
  build_ios:
    macos:
      xcode: 11.6.0
    working_directory: ~/
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/GaloyApp
      - add_ssh_keys:
          fingerprints:
            - "f6:4b:18:f4:33:f0:8f:46:47:42:9b:16:44:15:98:67"
      - restore_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
      - run: cd ios && bundle config set deployment 'true'
      - run: cd ios && bundle check || bundle install 
      - save_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor
      - restore_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
      - run: yarn install
      - run: git diff "ios/Podfile.lock" | cat
      - save_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
          paths:
            - node_modules
            - ios/Pods
      - run: yarn jest
      - run: 
         name: fastlane
         command: cd ios && bundle exec fastlane beta
         no_output_timeout: 15m
      - run: git config credential.helper 'cache --timeout=120'
      - run: git config --global user.name "circleci-bot"
      - run: git config --global user.email "bot@circleci.com"
      - run: git config pull.rebase false
      - run: git pull https://${GITHUB_TOKEN}@github.com/GaloyMoney/galoy-mobile.git $CIRCLE_BRANCH
      - run: git commit -a -m "new ios build [ci skip]"
      - run: git push -q https://${GITHUB_TOKEN}@github.com/GaloyMoney/galoy-mobile.git $CIRCLE_BRANCH
      - store_artifacts:
          path: ios/output
      - store_test_results:
          path: ios/output/scan

  build_android:
    docker:
      - image: circleci/android:api-29
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'
    working_directory: ~/
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/GaloyApp
      - run: sudo apt-get update
      - run: sudo apt-get install gnupg2
      - run: curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
      - run: sudo apt-get install -y nodejs
      - run: sudo apt-get install gcc g++ make
      - run: sudo npm install -g yarn
      - run: gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
      - run: curl -sL https://get.rvm.io | bash -s stable --ruby
      - run: source /home/circleci/.rvm/scripts/rvm
      - run: rvm install 2.4.1
      - run: rvm use 2.4.1 --default
      - run: gem install fastlane -NV
      
      - run: cd android && bundle config set deployment 'true'
      - run: cd android && bundle check || bundle install 

      - run: echo $ANDROID_SERVICE_ACCOUNT_UPLOAD | base64 -d > android/api-8350101450647692243-59029-b9bec84a7e5a.json
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/release.keystore
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/app/release.keystore

      - run: node -v
      - run: npm -v
      - run: ruby -v
      - run: fastlane -v
      - run: yarn -v
      
      - run: yarn install
      - run: yarn jest
      - run: cd android && fastlane android beta
      
      # - gke-auth
      # - run:
      #     name: upload latest apk to gcs
      #     command: |
      #       cd ~//android/app/build
      #       VERSION_CODE=$(jq .elements[0].apkData.versionCode ./intermediates/instant_app_manifest/release/output.json)
      #       cd ./outputs/apk/release/
      #       gsutil cp ./app-release.apk gs://bitcoin-beach-wallet/"$VERSION_CODE".apk
      #       gsutil cp ./app-release.apk gs://bitcoin-beach-wallet/latest.apk

      - run: git config credential.helper 'cache --timeout=120'
      - run: git config --global user.name "circleci-bot"
      - run: git config --global user.email "bot@circleci.com"
      - run: git config pull.rebase false
      - run: git pull origin $CIRCLE_BRANCH
      - run: git commit -a -m "new android build [ci skip]"
      - run: git push -q https://${GITHUB_TOKEN}@github.com/GaloyMoney/galoy-mobile.git $CIRCLE_BRANCH

  update_locale:
    working_directory: ~/
    docker:
      - image: cimg/base:2020.01    
    resource_class: small
    steps:
      - checkout:
          path: ~/GaloyApp
      - run: echo $PHRASE_CONFIG | base64 -d > .phrase.yml
      - run: wget https://github.com/phrase/phrase-cli/releases/download/2.0.13/phrase_linux_amd64
      - run: chmod +x ./phrase_linux_amd64
      - run: ./phrase_linux_amd64 push
      - run: ./phrase_linux_amd64 pull
      - run: git config credential.helper 'cache --timeout=120'
      - run: git config --global user.name "circleci-bot"
      - run: git config --global user.email "bot@circleci.com"
      - run: git config pull.rebase false
      - run: |
          if [[ $(git diff) ]]; then
            git commit -a -m "update translation file [ci skip]"
            git push -q https://${GITHUB_TOKEN}@github.com/GaloyMoney/galoy-mobile.git $CIRCLE_BRANCH
          else
            echo "nothing to commit"
          fi

workflows:
  mobile:
    jobs:
      - hold_build_mobile:
          type: approval
      - update_locale:
          requires:
            - hold_build_mobile
      - build_ios:
          requires:
            - update_locale
      - build_android:
          requires:
            - update_locale


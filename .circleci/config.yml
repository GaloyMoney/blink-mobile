version: 2.1

orbs:
  gh: circleci/github-cli@2.0

jobs:
  test_android:
    docker:
      - image: cimg/android:2022.06.1
    resource_class: xlarge
    environment:
      TERM: dumb
      JAVA_OPTS: -Xms512m -Xmx2g
      GRADLE_OPTS: -Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"
    working_directory: ~/galoy-mobile
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/galoy-mobile
      - run: sudo apt-get update
      - run: curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
      - run: sudo apt-get install -y gnupg2 gcc g++ make nodejs jq
      - run: sudo npm install -g yarn

      - run: sudo apt-get update
      - run: sudo apt-get install gnupg2
      - run: curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
      - run: sudo apt-get install -y nodejs
      - run: sudo apt-get install gcc g++ make
      - run: sudo npm install -g yarn
      - run: gpg --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB

      - restore_cache:
          key: 1-gem-{{ checksum "android/Gemfile.lock" }}
      - run: cd android && bundle config set deployment 'true'
      - run: cd android && bundle check || bundle install
      - save_cache:
          key: 1-gem-{{ checksum "android/Gemfile.lock" }}
          paths:
            - android/vendor

      - restore_cache:
          key: yarn-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Unit Testing
          command: yarn test
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/release.keystore
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/app/release.keystore
      - run: yarn android:prepareAssets
      - run:
          name: Test Browserstack
          command: |
            set -o pipefail
            cd android && bundle exec fastlane browserstack | tee browserstack_output.log
            error_code=$?
            SESSION_ID=$(cat browserstack_output.log | grep sessionId | head -n1 | sed -n "s/^.*'\(.*\)'.*$/\1/ p")
            echo "Session ID"
            echo $SESSION_ID
            VIDEO_URL=$(curl -s -u "$BROWSERSTACK_USER:$BROWSERSTACK_ACCESS_KEY" -X GET "https://api-cloud.browserstack.com/app-automate/sessions/$SESSION_ID.json" | jq -r '.automation_session.video_url')
            echo "Video URL"
            echo $VIDEO_URL
            exit $error_code

  build_android:
    docker:
      - image: cimg/android:2022.06.1
    resource_class: large
    environment:
      TERM: dumb
      JAVA_OPTS: -Xms512m -Xmx2g
      GRADLE_OPTS: -Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"
    working_directory: ~/galoy-mobile
    shell: /bin/bash --login -o pipefail
    steps:
      - gh/install
      - checkout:
          path: ~/galoy-mobile
      - run: sudo apt-get update
      - run: sudo apt-get install gnupg2
      - run: curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
      - run: sudo apt-get install -y nodejs
      - run: sudo apt-get install gcc g++ make
      - run: sudo npm install -g yarn
      - run: gpg --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB

      - run: cd android && bundle config set deployment 'true'
      - run: cd android && bundle check || bundle install

      - run: echo $ANDROID_SERVICE_ACCOUNT_UPLOAD | base64 -d > android/galoyapp-2e25e160d4ba.json
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/release.keystore
      - run: echo $RELEASE_KEYSTORE | base64 -d > android/app/release.keystore

      - restore_cache:
          key: 2-yarn-{{ checksum "yarn.lock" }}-android
      - run: yarn install
      - save_cache:
          key: 2-yarn-{{ checksum "yarn.lock" }}-android
          paths:
            - node_modules
      - run: echo $JAVA_OPTS
      - run: echo $GRADLE_OPTS
      - run: cd android && bundle exec fastlane android beta
      - run: git checkout main
      - run: git config credential.helper 'cache --timeout=120'
      - run: git config --global user.name "galoybot-circleci"
      - run: git config --global user.email "bot+circleci@galoy.io"
      - run: git config pull.rebase false
      - run: git pull origin main
      - run: cd ~/galoy-mobile
      - run: git add --force android/app/build/generated/sourcemaps/react/release
      - run: git commit -a -m 'ci$COLON new android build [ci skip]'
      - run: git push -q -f
      - run: gh release upload $CIRCLE_TAG "android/app/build/outputs/apk/release/app-arm64-v8a-release.apk" --clobber
      - run: gh release upload $CIRCLE_TAG "android/app/build/outputs/apk/release/app-armeabi-v7a-release.apk" --clobber
      - run: gh release upload $CIRCLE_TAG "android/app/build/outputs/apk/release/app-universal-release.apk" --clobber
      - run: gh release upload $CIRCLE_TAG "android/app/build/outputs/apk/release/app-x86-release.apk" --clobber
      - run: gh release upload $CIRCLE_TAG "android/app/build/outputs/apk/release/app-x86_64-release.apk" --clobber
      - run: gh release upload $CIRCLE_TAG "android/app/build/generated/sourcemaps/react/release/index.android.bundle.map" --clobber
      - store_artifacts:
          path: android/app/build/outputs

  test_ios:
    macos:
      xcode: 14.0.0
    working_directory: ~/galoy-mobile
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/galoy-mobile
      - add_ssh_keys:
          fingerprints:
            - "19:7e:f3:6c:be:a7:17:01:7d:09:ca:39:c3:98:86:90"
      - restore_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
      - run: cd ios && bundle config set deployment 'true'
      - run: cd ios && bundle check || bundle install
      - save_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor
      - restore_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
      - run: yarn install
      - save_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
          paths:
            - node_modules
            - ios/Pods
      - run:
          name: Unit Testing
          command: yarn test
      - run:
          name: Browserstack Testing
          command: |
            set -o pipefail
            cd ios && bundle exec fastlane browserstack | tee browserstack_output.log
            error_code=$?
            SESSION_ID=$(cat browserstack_output.log | grep sessionId | head -n1 | sed -n "s/^.*'\(.*\)'.*$/\1/ p")
            echo "Session ID"
            echo $SESSION_ID
            VIDEO_URL=$(curl -s -u "$BROWSERSTACK_USER:$BROWSERSTACK_ACCESS_KEY" -X GET "https://api-cloud.browserstack.com/app-automate/sessions/$SESSION_ID.json" | jq -r '.automation_session.video_url')
            echo "Video URL"
            echo $VIDEO_URL
            exit $error_code
          no_output_timeout: 15m

  build_ios:
    macos:
      xcode: 14.0.0
    working_directory: ~/galoy-mobile
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - gh/install
      - checkout:
          path: ~/galoy-mobile
      - add_ssh_keys:
          fingerprints:
            - "19:7e:f3:6c:be:a7:17:01:7d:09:ca:39:c3:98:86:90"
      - restore_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
      - run: cd ios && bundle config set deployment 'true'
      - run: cd ios && bundle check || bundle install
      - save_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor
      - restore_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
      - run: yarn install
      - save_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
          paths:
            - node_modules
            - ios/Pods
      - run: sed -i'' -e "s/MARKETING_VERSION.*/MARKETING_VERSION = $CIRCLE_TAG;/g" ios/GaloyApp.xcodeproj/project.pbxproj
      - run:
          name: fastlane
          command: cd ios && bundle exec fastlane beta
          no_output_timeout: 15m
      - run: git checkout main
      - run: git config credential.helper 'cache --timeout=120'
      - run: git config --global user.name "galoybot-circleci"
      - run: git config --global user.email "bot+circleci@galoy.io"
      - run: git config pull.rebase false
      - run: git pull origin main
      - run: git commit -a -m 'ci$COLON new ios build [ci skip]'
      - run: git push -q -f
      - run: gh release upload $CIRCLE_TAG "ios/output/gym/Bitcoin Beach.ipa" --clobber
      - store_artifacts:
          path: ios/output

workflows:
  release:
    jobs:
      - test_ios:
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - build_ios:
          requires:
            - test_ios
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - test_android:
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - build_android:
          requires:
            - test_android
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
  in-pr:
    jobs:
      - test_android
      - test_ios
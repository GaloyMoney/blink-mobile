# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Build Releasable APK"
  lane :build do
    android_set_version_name(version_name: ENV["PUBLIC_VERSION"])
    gradle(task: 'clean')
    gradle(
      task: "assemble",
      build_type: "Release",
      flags: "--no-daemon --stacktrace --info",
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :play_store_upload do
    upload_to_play_store(
      apk_paths: [
        "./app/build/outputs/apk/release/app-arm64-v8a-release.apk",
        "./app/build/outputs/apk/release/app-armeabi-v7a-release.apk",
        "./app/build/outputs/apk/release/app-universal-release.apk",
        "./app/build/outputs/apk/release/app-x86-release.apk",
        "./app/build/outputs/apk/release/app-x86_64-release.apk",
      ],
      metadata_path: "./app/build/outputs/apk/release",
      track: "internal",
      skip_upload_changelogs: true,
      skip_upload_images: true,
    )
  end

  desc "Deploy a new version to Huawei App Gallery"
  lane :huawei_store_upload do
    huawei_appgallery_connect(
      client_id: ENV["HUAWEI_CLIENT_ID"],
      client_secret: ENV["HUAWEI_CLIENT_SECRET"],
      app_id: ENV["HUAWEI_APP_ID"],
      apk_path: "./app-universal-release.apk",
      phase_wise_release: true,
      phase_release_percent: "1",
      phase_release_description: "Phased Release",
      submit_for_review: false
    )
  end

  desc "Promote Internal Testing build to Beta"
  lane :promote_to_beta do
    upload_to_play_store(
      track: "internal",
      track_promote_to: "alpha",
      version_name: ENV["VERSION"],
      version_code: ENV["VERSION_CODE"],
      skip_upload_apk: true
    )
  end

  desc "Promote Internal Testing build to Public"
  lane :promote_to_public do
    upload_to_play_store(
      track: "alpha",
      track_promote_to: "beta",
      version_name: ENV["VERSION"],
      version_code: ENV["VERSION_CODE"],
      skip_upload_apk: true
    )
  end

  desc "Phased Public Rollout"
  lane :public_phased_percent do
    upload_to_play_store(
      track: "beta",
      track_promote_to: "production",
      version_name: ENV["VERSION"],
      version_code: ENV["VERSION_CODE"],
      rollout: ENV["ROLLOUT"],
      skip_upload_apk: true
    )
  end

  desc "Build for end to end testing"
  lane :build_e2e do
    gradle(
      task: "clean assemble",
      build_type: "Debug",
      print_command: false,
      flags: "--no-daemon --max-workers=8 --stacktrace --info",
    )
  end

  desc "End to end testing on browserstack"
  lane :browserstack do
    build_e2e
    upload_to_browserstack_app_automate(
      browserstack_username: ENV["BROWSERSTACK_USER"],
      browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
      file_path: ENV["GRADLE_APK_OUTPUT_PATH"]
    )
    sh("GALOY_TEST_TOKENS=$GALOY_TEST_TOKENS && GALOY_TOKEN_2=$GALOY_TOKEN_2 && yarn test:browserstack:android")
  end
end

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WelcomePhoneInputScreen render matches snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "#E6EBEf",
          "flex": 1,
          "height": "100%",
        },
        Object {
          "backgroundColor": "#E6EBEf",
        },
      ],
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection={
      Array [
        "down",
      ]
    }
    swipeThreshold={50}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      forwardedRef={[Function]}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      collapsable={false}
      deviceHeight={null}
      deviceWidth={null}
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      nativeID="animatedComponent"
      onBackdropPress={[Function]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onSwipeComplete={[Function]}
      panResponderThreshold={4}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      statusBarTranslucent={false}
      style={
        Object {
          "flex": 1,
          "flexGrow": 1,
          "justifyContent": "center",
          "left": 0,
          "margin": 37.5,
          "marginBottom": 0,
          "marginHorizontal": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection={
        Array [
          "down",
        ]
      }
      swipeThreshold={50}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "space-around",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": "100%",
              "width": "100%",
            }
          }
        />
      </View>
      <RNCSafeAreaView
        edges={
          Array [
            "bottom",
            "left",
            "right",
            "top",
          ]
        }
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "paddingHorizontal": 20,
            "paddingTop": 10,
          }
        }
      >
        <View
          style={
            Object {
              "height": 14,
            }
          }
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#CFD9E2",
                  "fontSize": 72,
                },
                Object {
                  "height": 40,
                  "top": -40,
                },
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            ï“‰
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "#1d1d1d",
              "fontSize": 18,
              "marginVertical": 8,
            }
          }
        >
          
        </Text>
        <View
          style={
            Object {
              "alignContent": "stretch",
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 3,
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 3,
                },
                undefined,
                false,
              ]
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "busy": false,
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#3050C4",
                    "borderColor": "#2089dc",
                    "borderRadius": 3,
                    "borderWidth": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginHorizontal": 20,
                    "marginVertical": 10,
                    "padding": 8,
                    "width": 145,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "fontSize": 18,
                      "paddingVertical": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  Dismiss
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "borderRadius": 3,
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 3,
                },
                undefined,
                false,
              ]
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "busy": false,
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#3050C4",
                    "borderColor": "#2089dc",
                    "borderRadius": 3,
                    "borderWidth": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginHorizontal": 20,
                    "marginVertical": 10,
                    "padding": 8,
                    "width": 145,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "fontSize": 18,
                      "paddingVertical": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  Open
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RNCSafeAreaView>
    </View>
  </Modal>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "backgroundColor": "#E6EBEf",
          "flex": 1,
          "height": "100%",
        },
        Object {
          "backgroundColor": "#E6EBEf",
        },
      ]
    }
  >
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {
            "alignItems": "stretch",
            "justifyContent": "flex-start",
          },
          Object {},
        ]
      }
      style={
        Array [
          Object {
            "backgroundColor": "#E6EBEf",
            "flex": 1,
            "height": "100%",
          },
          Object {
            "backgroundColor": "#E6EBEf",
          },
        ]
      }
    >
      <View>
        <View
          style={
            Object {
              "flex": 1,
              "justifyContent": "space-around",
              "marginTop": 50,
            }
          }
        >
          <View>
            < />
            <Text>
              Enter your phone number, and we'll text you an access code.
            </Text>
          </View>
          <View
            onLayout={[Function]}
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "white",
                    "flexDirection": "row",
                    "width": 600,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "height": "100%",
                    "justifyContent": "center",
                    "minWidth": 32,
                    "opacity": 1,
                    "width": 150,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginRight": 10,
                      "width": 30,
                    }
                  }
                >
                  <ActivityIndicator
                    size="small"
                  />
                </View>
                <Modal
                  animated={true}
                  animationType="slide"
                  hardwareAccelerated={false}
                  onDismiss={[Function]}
                  onRequestClose={[Function]}
                  testID="country-picker"
                  visible={false}
                >
                  <RCTSafeAreaView
                    emulateUnlessSupported={true}
                    style={
                      Array [
                        Object {
                          "flex": 1,
                        },
                        Object {
                          "backgroundColor": "#ffffff",
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "height": 48,
                              "justifyContent": "center",
                              "width": "15%",
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          nativeID="animatedComponent"
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <Image
                            source={
                              Object {
                                "testUri": "../../react-native-country-picker-modal/lib/assets/images/close.ios.png",
                              }
                            }
                            style={
                              Array [
                                Object {
                                  "height": 25,
                                  "resizeMode": "contain",
                                  "width": 25,
                                },
                                undefined,
                                Object {
                                  "tintColor": "#000000",
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <TextInput
                        autoCorrect={false}
                        autoFocus={false}
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onClose={[Function]}
                        onFocus={[Function]}
                        placeholder="Enter country name"
                        placeholderTextColor="#aaa"
                        renderFilter={[Function]}
                        style={
                          Array [
                            Object {
                              "height": 48,
                              "width": "70%",
                            },
                            Object {
                              "color": "#000000",
                              "fontFamily": "System",
                              "fontSize": 16,
                            },
                          ]
                        }
                        testID="text-input-country-filter"
                        value=""
                        withCloseButton={true}
                        withFilter={true}
                      />
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                          },
                          Object {
                            "backgroundColor": "#ffffff",
                          },
                        ]
                      }
                    >
                      <RCTScrollView
                        ItemSeparatorComponent={[Function]}
                        automaticallyAdjustContentInsets={false}
                        data={Array []}
                        getItem={[Function]}
                        getItemCount={[Function]}
                        getItemLayout={[Function]}
                        initialNumToRender={14}
                        keyExtractor={[Function]}
                        keyboardShouldPersistTaps="handled"
                        onContentSizeChange={[Function]}
                        onLayout={[Function]}
                        onMomentumScrollBegin={[Function]}
                        onMomentumScrollEnd={[Function]}
                        onScroll={[Function]}
                        onScrollBeginDrag={[Function]}
                        onScrollEndDrag={[Function]}
                        onScrollToIndexFailed={[Function]}
                        removeClippedSubviews={false}
                        renderItem={[Function]}
                        scrollEventThrottle={1}
                        stickyHeaderIndices={Array []}
                        testID="list-countries"
                        viewabilityConfigCallbackPairs={Array []}
                      >
                        <View />
                      </RCTScrollView>
                    </View>
                  </RCTSafeAreaView>
                </Modal>
                <
                  height={14}
                  testID="DropDownButton"
                  width={12}
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#F8F9F9",
                      "flex": 1,
                      "flexDirection": "row",
                      "paddingHorizontal": 30,
                      "paddingVertical": 27,
                      "textAlign": "left",
                    },
                    Object {},
                  ]
                }
              >
                <TextInput
                  accessibilityLabel="Input phone number"
                  autoFocus={true}
                  editable={true}
                  keyboardAppearance="default"
                  keyboardType="phone-pad"
                  onChangeText={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Phone Number"
                  returnKeyType="done"
                  selectionColor="black"
                  style={
                    Array [
                      Object {
                        "color": "#000000",
                        "flex": 1,
                        "fontSize": 16,
                      },
                      Object {},
                    ]
                  }
                  textContentType="telephoneNumber"
                  value=""
                />
              </View>
            </View>
            <ActivityIndicator
              animating={false}
              color="#3050C4"
              size="large"
              style={
                Object {
                  "marginTop": 32,
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "borderRadius": 3,
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 3,
                },
                undefined,
                false,
              ]
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "busy": false,
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#2089dc",
                    "borderColor": "#2089dc",
                    "borderRadius": 3,
                    "borderWidth": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "padding": 8,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "fontSize": 18,
                      "paddingVertical": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  Continue
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View>
          <Text
            allowFontScaling={false}
            onPress={[Function]}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#1d1d1d",
                  "fontSize": 12,
                },
                undefined,
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            ïˆ£
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;

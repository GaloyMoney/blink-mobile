// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SendBitcoinConfirmationScreen render matches snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "#E6EBEf",
          "flex": 1,
          "height": "100%",
        },
        Object {},
      ],
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <Modal
    animationType="none"
    deviceHeight={null}
    deviceWidth={null}
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    onSwipeComplete={[Function]}
    panResponderThreshold={4}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection={
      Array [
        "down",
      ]
    }
    swipeThreshold={50}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      forwardedRef={[Function]}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      deviceHeight={null}
      deviceWidth={null}
      forwardedRef={[Function]}
      hideModalContentWhileAnimating={false}
      onBackdropPress={[Function]}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onSwipeComplete={[Function]}
      panResponderThreshold={4}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "flexGrow": 1,
          "justifyContent": "center",
          "left": 0,
          "margin": 37.5,
          "marginBottom": 0,
          "marginHorizontal": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeDirection={
        Array [
          "down",
        ]
      }
      swipeThreshold={50}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "space-around",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": "100%",
              "width": "100%",
            }
          }
        />
      </View>
      <RNCSafeAreaView
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "paddingHorizontal": 20,
            "paddingTop": 10,
          }
        }
      >
        <View
          style={
            Object {
              "height": 14,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#CFD9E2",
                  "fontSize": 72,
                },
                Object {
                  "height": 40,
                  "top": -40,
                },
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            ï“‰
          </Text>
        </View>
        <Text
          style={
            Object {
              "fontSize": 18,
              "marginVertical": 8,
            }
          }
        >
          
        </Text>
        <View
          style={
            Object {
              "alignContent": "stretch",
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 3,
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 3,
                },
                undefined,
                false,
              ]
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "busy": false,
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#3050C4",
                    "borderColor": "#2089dc",
                    "borderRadius": 3,
                    "borderWidth": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginHorizontal": 20,
                    "marginVertical": 10,
                    "padding": 8,
                    "width": 145,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "fontSize": 18,
                      "paddingVertical": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  Dismiss
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "borderRadius": 3,
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 3,
                },
                undefined,
                false,
              ]
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "busy": false,
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#3050C4",
                    "borderColor": "#2089dc",
                    "borderRadius": 3,
                    "borderWidth": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginHorizontal": 20,
                    "marginVertical": 10,
                    "padding": 8,
                    "width": 145,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "fontSize": 18,
                      "paddingVertical": 1,
                      "textAlign": "center",
                    }
                  }
                >
                  Open
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RNCSafeAreaView>
    </View>
  </Modal>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "alignItems": "stretch",
          "height": "100%",
          "justifyContent": "flex-start",
          "width": "100%",
        },
        Object {},
      ]
    }
  >
    <View>
      <View>
        <View>
          <View>
            <Text>
              To:
            </Text>
            <Text>
              Bitcoin
            </Text>
          </View>
          <View>
            <Text>
              Amount:
            </Text>
            <Text>
              68,626 sats
            </Text>
            <Text>
              $27.22
            </Text>
          </View>
          <View>
            <Text>
              Fee:
            </Text>
            <Text>
              0 sats
            </Text>
          </View>
        </View>
      </View>
      <View />
      <View>
        <View>
          <Text>
            Do you want to confirm this payment?
          </Text>
          <Text>
            Payments are final.
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "borderRadius": 3,
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 3,
              },
              undefined,
              false,
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "busy": false,
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2089dc",
                  "borderColor": "#2089dc",
                  "borderRadius": 3,
                  "borderWidth": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontSize": 18,
                    "paddingVertical": 1,
                    "textAlign": "center",
                  }
                }
              >
                Confirm payment
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

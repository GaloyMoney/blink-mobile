fragment Transaction on Transaction {
  __typename
  id
  status
  direction
  memo
  createdAt
  settlementAmount
  settlementFee
  settlementDisplayFee
  settlementCurrency
  settlementDisplayAmount
  settlementDisplayCurrency
  settlementPrice {
    base
    offset
    currencyUnit
    formattedAmount
    __typename
  }
  initiationVia {
    ... on InitiationViaIntraLedger {
      counterPartyWalletId
      counterPartyUsername
      __typename
    }
    ... on InitiationViaLn {
      paymentHash
      paymentRequest
      __typename
    }
    ... on InitiationViaOnChain {
      address
      __typename
    }
    __typename
  }
  settlementVia {
    ... on SettlementViaIntraLedger {
      counterPartyWalletId
      counterPartyUsername
      __typename
    }
    ... on SettlementViaLn {
      preImage
      __typename
    }
    ... on SettlementViaOnChain {
      transactionHash
      arrivalInMempoolEstimatedAt
      __typename
    }
    __typename
  }
}

fragment TransactionList on TransactionConnection {
  pageInfo {
    hasNextPage
    hasPreviousPage
    startCursor
    endCursor
    __typename
  }
  edges {
    cursor
    node {
      ...Transaction
      __typename
    }
    __typename
  }
  __typename
}

mutation accountDelete {
  accountDelete {
    errors {
      message
      __typename
    }
    success
    __typename
  }
}

mutation accountDisableNotificationCategory($input: AccountDisableNotificationCategoryInput!) {
  accountDisableNotificationCategory(input: $input) {
    errors {
      message
      __typename
    }
    account {
      id
      notificationSettings {
        push {
          enabled
          disabledCategories
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation accountDisableNotificationChannel($input: AccountDisableNotificationChannelInput!) {
  accountDisableNotificationChannel(input: $input) {
    errors {
      message
      __typename
    }
    account {
      id
      notificationSettings {
        push {
          enabled
          disabledCategories
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation accountEnableNotificationCategory($input: AccountEnableNotificationCategoryInput!) {
  accountEnableNotificationCategory(input: $input) {
    errors {
      message
      __typename
    }
    account {
      id
      notificationSettings {
        push {
          enabled
          disabledCategories
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation accountEnableNotificationChannel($input: AccountEnableNotificationChannelInput!) {
  accountEnableNotificationChannel(input: $input) {
    errors {
      message
      __typename
    }
    account {
      id
      notificationSettings {
        push {
          enabled
          disabledCategories
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation accountUpdateDefaultWalletId($input: AccountUpdateDefaultWalletIdInput!) {
  accountUpdateDefaultWalletId(input: $input) {
    errors {
      message
      __typename
    }
    account {
      id
      defaultWalletId
      __typename
    }
    __typename
  }
}

mutation accountUpdateDisplayCurrency($input: AccountUpdateDisplayCurrencyInput!) {
  accountUpdateDisplayCurrency(input: $input) {
    errors {
      message
      __typename
    }
    account {
      id
      displayCurrency
      __typename
    }
    __typename
  }
}

mutation captchaCreateChallenge {
  captchaCreateChallenge {
    errors {
      message
      __typename
    }
    result {
      id
      challengeCode
      newCaptcha
      failbackMode
      __typename
    }
    __typename
  }
}

mutation captchaRequestAuthCode($input: CaptchaRequestAuthCodeInput!) {
  captchaRequestAuthCode(input: $input) {
    errors {
      message
      code
      __typename
    }
    success
    __typename
  }
}

mutation deviceNotificationTokenCreate($input: DeviceNotificationTokenCreateInput!) {
  deviceNotificationTokenCreate(input: $input) {
    errors {
      message
      __typename
    }
    success
    __typename
  }
}

mutation feedbackSubmit($input: FeedbackSubmitInput!) {
  feedbackSubmit(input: $input) {
    errors {
      message
      __typename
    }
    success
    __typename
  }
}

mutation intraLedgerPaymentSend($input: IntraLedgerPaymentSendInput!) {
  intraLedgerPaymentSend(input: $input) {
    errors {
      message
      __typename
    }
    status
    __typename
  }
}

mutation intraLedgerUsdPaymentSend($input: IntraLedgerUsdPaymentSendInput!) {
  intraLedgerUsdPaymentSend(input: $input) {
    errors {
      message
      __typename
    }
    status
    __typename
  }
}

mutation lnInvoiceCreate($input: LnInvoiceCreateInput!) {
  lnInvoiceCreate(input: $input) {
    errors {
      message
      __typename
    }
    invoice {
      createdAt
      paymentHash
      paymentRequest
      paymentStatus
      satoshis
      __typename
    }
    __typename
  }
}

mutation lnInvoiceFeeProbe($input: LnInvoiceFeeProbeInput!) {
  lnInvoiceFeeProbe(input: $input) {
    errors {
      message
      __typename
    }
    amount
    __typename
  }
}

mutation lnInvoicePaymentSend($input: LnInvoicePaymentInput!) {
  lnInvoicePaymentSend(input: $input) {
    errors {
      message
      __typename
    }
    status
    __typename
  }
}

mutation lnNoAmountInvoiceCreate($input: LnNoAmountInvoiceCreateInput!) {
  lnNoAmountInvoiceCreate(input: $input) {
    errors {
      message
      __typename
    }
    invoice {
      createdAt
      paymentHash
      paymentRequest
      paymentStatus
      __typename
    }
    __typename
  }
}

mutation lnNoAmountInvoiceFeeProbe($input: LnNoAmountInvoiceFeeProbeInput!) {
  lnNoAmountInvoiceFeeProbe(input: $input) {
    errors {
      message
      __typename
    }
    amount
    __typename
  }
}

mutation lnNoAmountInvoicePaymentSend($input: LnNoAmountInvoicePaymentInput!) {
  lnNoAmountInvoicePaymentSend(input: $input) {
    errors {
      message
      __typename
    }
    status
    __typename
  }
}

mutation lnNoAmountUsdInvoiceFeeProbe($input: LnNoAmountUsdInvoiceFeeProbeInput!) {
  lnNoAmountUsdInvoiceFeeProbe(input: $input) {
    errors {
      message
      __typename
    }
    amount
    __typename
  }
}

mutation lnNoAmountUsdInvoicePaymentSend($input: LnNoAmountUsdInvoicePaymentInput!) {
  lnNoAmountUsdInvoicePaymentSend(input: $input) {
    errors {
      message
      __typename
    }
    status
    __typename
  }
}

mutation lnUsdInvoiceCreate($input: LnUsdInvoiceCreateInput!) {
  lnUsdInvoiceCreate(input: $input) {
    errors {
      message
      __typename
    }
    invoice {
      createdAt
      paymentHash
      paymentRequest
      paymentStatus
      satoshis
      __typename
    }
    __typename
  }
}

mutation lnUsdInvoiceFeeProbe($input: LnUsdInvoiceFeeProbeInput!) {
  lnUsdInvoiceFeeProbe(input: $input) {
    errors {
      message
      __typename
    }
    amount
    __typename
  }
}

mutation onChainAddressCurrent($input: OnChainAddressCurrentInput!) {
  onChainAddressCurrent(input: $input) {
    errors {
      message
      __typename
    }
    address
    __typename
  }
}

mutation onChainPaymentSend($input: OnChainPaymentSendInput!) {
  onChainPaymentSend(input: $input) {
    transaction {
      settlementVia {
        ... on SettlementViaOnChain {
          arrivalInMempoolEstimatedAt
          __typename
        }
        __typename
      }
      __typename
    }
    errors {
      message
      __typename
    }
    status
    __typename
  }
}

mutation onChainPaymentSendAll($input: OnChainPaymentSendAllInput!) {
  onChainPaymentSendAll(input: $input) {
    errors {
      message
      __typename
    }
    status
    __typename
  }
}

mutation onChainUsdPaymentSend($input: OnChainUsdPaymentSendInput!) {
  onChainUsdPaymentSend(input: $input) {
    errors {
      message
      __typename
    }
    status
    __typename
  }
}

mutation onChainUsdPaymentSendAsBtcDenominated($input: OnChainUsdPaymentSendAsBtcDenominatedInput!) {
  onChainUsdPaymentSendAsBtcDenominated(input: $input) {
    errors {
      message
      __typename
    }
    status
    __typename
  }
}

mutation onboardingFlowStart($input: OnboardingFlowStartInput!) {
  onboardingFlowStart(input: $input) {
    workflowRunId
    tokenWeb
    __typename
  }
}

mutation quizCompleted($input: QuizCompletedInput!) {
  quizCompleted(input: $input) {
    errors {
      message
      __typename
    }
    quiz {
      id
      completed
      __typename
    }
    __typename
  }
}

mutation userContactUpdateAlias($input: UserContactUpdateAliasInput!) {
  userContactUpdateAlias(input: $input) {
    errors {
      message
      __typename
    }
    contact {
      alias
      id
      __typename
    }
    __typename
  }
}

mutation userEmailDelete {
  userEmailDelete {
    errors {
      message
      __typename
    }
    me {
      id
      phone
      totpEnabled
      email {
        address
        verified
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation userEmailRegistrationInitiate($input: UserEmailRegistrationInitiateInput!) {
  userEmailRegistrationInitiate(input: $input) {
    errors {
      message
      __typename
    }
    emailRegistrationId
    me {
      id
      email {
        address
        verified
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation userEmailRegistrationValidate($input: UserEmailRegistrationValidateInput!) {
  userEmailRegistrationValidate(input: $input) {
    errors {
      message
      __typename
    }
    me {
      id
      email {
        address
        verified
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation userLogin($input: UserLoginInput!) {
  userLogin(input: $input) {
    errors {
      message
      code
      __typename
    }
    authToken
    totpRequired
    __typename
  }
}

mutation userLoginUpgrade($input: UserLoginUpgradeInput!) {
  userLoginUpgrade(input: $input) {
    errors {
      message
      code
      __typename
    }
    success
    authToken
    __typename
  }
}

mutation userLogout($input: UserLogoutInput!) {
  userLogout(input: $input) {
    success
    __typename
  }
}

mutation userPhoneDelete {
  userPhoneDelete {
    errors {
      message
      __typename
    }
    me {
      id
      phone
      totpEnabled
      email {
        address
        verified
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation userPhoneRegistrationInitiate($input: UserPhoneRegistrationInitiateInput!) {
  userPhoneRegistrationInitiate(input: $input) {
    errors {
      message
      __typename
    }
    success
    __typename
  }
}

mutation userPhoneRegistrationValidate($input: UserPhoneRegistrationValidateInput!) {
  userPhoneRegistrationValidate(input: $input) {
    errors {
      message
      code
      __typename
    }
    me {
      id
      phone
      email {
        address
        verified
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation userTotpDelete {
  userTotpDelete {
    errors {
      message
      __typename
    }
    me {
      id
      phone
      totpEnabled
      email {
        address
        verified
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation userTotpRegistrationInitiate {
  userTotpRegistrationInitiate {
    errors {
      message
      __typename
    }
    totpRegistrationId
    totpSecret
    __typename
  }
}

mutation userTotpRegistrationValidate($input: UserTotpRegistrationValidateInput!) {
  userTotpRegistrationValidate(input: $input) {
    errors {
      message
      __typename
    }
    me {
      totpEnabled
      phone
      email {
        address
        verified
        __typename
      }
      __typename
    }
    __typename
  }
}

mutation userUpdateLanguage($input: UserUpdateLanguageInput!) {
  userUpdateLanguage(input: $input) {
    errors {
      message
      __typename
    }
    user {
      id
      language
      __typename
    }
    __typename
  }
}

mutation userUpdateUsername($input: UserUpdateUsernameInput!) {
  userUpdateUsername(input: $input) {
    errors {
      code
      __typename
    }
    user {
      id
      username
      __typename
    }
    __typename
  }
}

query Circles {
  me {
    username
    defaultAccount {
      id
      ... on ConsumerAccount {
        welcomeProfile {
          allTimePoints
          allTimeRank
          innerCircleAllTimeCount
          innerCircleThisMonthCount
          outerCircleAllTimeCount
          outerCircleThisMonthCount
          thisMonthPoints
          thisMonthRank
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

query ContactsCard {
  me {
    id
    contacts {
      id
      username
      alias
      transactionsCount
      __typename
    }
    __typename
  }
}

query accountDefaultWallet($username: Username!) {
  accountDefaultWallet(username: $username) {
    id
    __typename
  }
}

query accountLimits {
  me {
    id
    defaultAccount {
      id
      limits {
        withdrawal {
          totalLimit
          remainingLimit
          interval
          __typename
        }
        internalSend {
          totalLimit
          remainingLimit
          interval
          __typename
        }
        convert {
          totalLimit
          remainingLimit
          interval
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

query accountScreen {
  me {
    id
    phone
    totpEnabled
    email {
      address
      verified
      __typename
    }
    defaultAccount {
      id
      level
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

query addressScreen {
  me {
    id
    username
    __typename
  }
}

query analytics {
  me {
    username
    id
    __typename
  }
  globals {
    network
    __typename
  }
}

query balanceHeader {
  me {
    id
    defaultAccount {
      id
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

query beta {
  beta @client
}

query btcPriceList($range: PriceGraphRange!) {
  btcPriceList(range: $range) {
    timestamp
    price {
      base
      offset
      currencyUnit
      __typename
    }
    __typename
  }
}

query businessMapMarkers {
  businessMapMarkers {
    username
    mapInfo {
      title
      coordinates {
        longitude
        latitude
        __typename
      }
      __typename
    }
    __typename
  }
}

query colorScheme {
  colorScheme @client
}

query contacts {
  me {
    id
    contacts {
      id
      username
      alias
      transactionsCount
      __typename
    }
    __typename
  }
}

query conversionScreen {
  me {
    id
    defaultAccount {
      id
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

query currencyList {
  currencyList {
    __typename
    id
    flag
    name
    symbol
    fractionDigits
  }
}

query debugScreen {
  me {
    id
    defaultAccount {
      id
      __typename
    }
    __typename
  }
}

query displayCurrency {
  me {
    id
    defaultAccount {
      id
      displayCurrency
      __typename
    }
    __typename
  }
}

query feedbackModalShown {
  feedbackModalShown @client
}

query fullOnboardingScreen {
  me {
    id
    defaultAccount {
      ... on ConsumerAccount {
        id
        onboardingStatus
        __typename
      }
      __typename
    }
    __typename
  }
}

query hasPromptedSetDefaultAccount {
  hasPromptedSetDefaultAccount @client
}

query hiddenBalanceToolTip {
  hiddenBalanceToolTip @client
}

query hideBalance {
  hideBalance @client
}

query homeAuthed {
  me {
    id
    language
    username
    phone
    email {
      address
      verified
      __typename
    }
    defaultAccount {
      id
      level
      defaultWalletId
      pendingIncomingTransactions {
        ...Transaction
        __typename
      }
      transactions(first: 20) {
        ...TransactionList
        __typename
      }
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

query homeUnauthed {
  globals {
    network
    __typename
  }
  currencyList {
    id
    flag
    name
    symbol
    fractionDigits
    __typename
  }
}

query innerCircleValue {
  innerCircleValue @client
}

query introducingCirclesModalShown {
  introducingCirclesModalShown @client
}

query invite {
  me {
    username
    __typename
  }
}

query language {
  me {
    id
    language
    __typename
  }
}

query level {
  me {
    id
    defaultAccount {
      id
      level
      __typename
    }
    __typename
  }
}

query mobileUpdate {
  mobileVersions {
    platform
    currentSupported
    minSupported
    __typename
  }
}

query myQuizQuestions {
  me {
    id
    defaultAccount {
      id
      ... on ConsumerAccount {
        quiz {
          id
          amount
          completed
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

query myUserId {
  me {
    id
    __typename
  }
}

query network {
  globals {
    network
    __typename
  }
}

query notificationSettings {
  me {
    id
    defaultAccount {
      id
      notificationSettings {
        push {
          enabled
          disabledCategories
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

query onChainTxFee($walletId: WalletId!, $address: OnChainAddress!, $amount: SatAmount!) {
  onChainTxFee(walletId: $walletId, address: $address, amount: $amount) {
    amount
    __typename
  }
}

query onChainUsdTxFee($walletId: WalletId!, $address: OnChainAddress!, $amount: CentAmount!) {
  onChainUsdTxFee(walletId: $walletId, address: $address, amount: $amount) {
    amount
    __typename
  }
}

query onChainUsdTxFeeAsBtcDenominated($walletId: WalletId!, $address: OnChainAddress!, $amount: SatAmount!) {
  onChainUsdTxFeeAsBtcDenominated(
    walletId: $walletId
    address: $address
    amount: $amount
  ) {
    amount
    __typename
  }
}

query paymentRequest {
  globals {
    network
    feesInformation {
      deposit {
        minBankFee
        minBankFeeThreshold
        __typename
      }
      __typename
    }
    __typename
  }
  me {
    id
    username
    defaultAccount {
      id
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      defaultWalletId
      __typename
    }
    __typename
  }
}

query priceHistoryScreen {
  me {
    id
    defaultAccount {
      id
      __typename
    }
    __typename
  }
}

query quizSats {
  quizQuestions {
    id
    earnAmount
    __typename
  }
}

query realtimePrice {
  me {
    id
    defaultAccount {
      id
      realtimePrice {
        btcSatPrice {
          base
          offset
          __typename
        }
        denominatorCurrency
        id
        timestamp
        usdCentPrice {
          base
          offset
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

query scanningQRCodeScreen {
  globals {
    network
    __typename
  }
  me {
    id
    defaultAccount {
      id
      wallets {
        id
        __typename
      }
      __typename
    }
    contacts {
      id
      username
      __typename
    }
    __typename
  }
}

query sendBitcoinConfirmationScreen {
  me {
    id
    defaultAccount {
      id
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

query sendBitcoinDestination {
  globals {
    network
    __typename
  }
  me {
    id
    defaultAccount {
      id
      wallets {
        id
        __typename
      }
      __typename
    }
    contacts {
      id
      username
      __typename
    }
    __typename
  }
}

query sendBitcoinDetailsScreen {
  globals {
    network
    __typename
  }
  me {
    id
    defaultAccount {
      id
      defaultWalletId
      wallets {
        id
        walletCurrency
        balance
        __typename
      }
      __typename
    }
    __typename
  }
}

query sendBitcoinInternalLimits {
  me {
    id
    defaultAccount {
      id
      limits {
        internalSend {
          totalLimit
          remainingLimit
          interval
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

query sendBitcoinWithdrawalLimits {
  me {
    id
    defaultAccount {
      id
      limits {
        withdrawal {
          totalLimit
          remainingLimit
          interval
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}

query setDefaultAccountModal {
  me {
    id
    defaultAccount {
      id
      defaultWalletId
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

query setDefaultWalletScreen {
  me {
    id
    defaultAccount {
      id
      defaultWalletId
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

query settingsScreen {
  me {
    id
    phone
    username
    language
    defaultAccount {
      id
      defaultWalletId
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

query supportedCountries {
  globals {
    supportedCountries {
      id
      supportedAuthChannels
      __typename
    }
    __typename
  }
}

query totpRegistrationScreen {
  me {
    username
    __typename
  }
}

query transactionListForContact($username: Username!, $first: Int, $after: String, $last: Int, $before: String) {
  me {
    id
    contactByUsername(username: $username) {
      transactions(first: $first, after: $after, last: $last, before: $before) {
        ...TransactionList
        __typename
      }
      __typename
    }
    __typename
  }
}

query transactionListForDefaultAccount($first: Int, $after: String, $last: Int, $before: String) {
  me {
    id
    defaultAccount {
      id
      pendingIncomingTransactions {
        ...Transaction
        __typename
      }
      transactions(first: $first, after: $after, last: $last, before: $before) {
        ...TransactionList
        __typename
      }
      __typename
    }
    __typename
  }
}

query walletCSVTransactions($walletIds: [WalletId!]!) {
  me {
    id
    defaultAccount {
      id
      csvTransactions(walletIds: $walletIds)
      __typename
    }
    __typename
  }
}

query walletOverviewScreen {
  me {
    id
    defaultAccount {
      id
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

query wallets {
  me {
    id
    defaultAccount {
      id
      wallets {
        walletCurrency
        id
        __typename
      }
      __typename
    }
    __typename
  }
}

query warningSecureAccount {
  me {
    id
    defaultAccount {
      level
      id
      wallets {
        id
        balance
        walletCurrency
        __typename
      }
      __typename
    }
    __typename
  }
}

subscription myLnUpdates {
  myUpdates {
    errors {
      message
      __typename
    }
    update {
      ... on LnUpdate {
        paymentHash
        status
        __typename
      }
      __typename
    }
    __typename
  }
}